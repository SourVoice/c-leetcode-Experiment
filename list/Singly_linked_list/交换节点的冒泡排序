#include <stdio.h>
typedef struct _node
{
    int data;
    struct _node *next;
} List, Node;
void sortList(List *L, int len) //交换节点的冒泡排序
{
    Node *p = (Node *)malloc(sizeof(Node));
    Node *head = (Node *)malloc(sizeof(Node));
    int minData;
    for (int i = 0; i < len; i++)
    {
        p = L->next;
        head = L;
        Node *q = (Node *)malloc(sizeof(Node));
        q = p->next;
        for (int j = 0; j < len - i - 1; j++)
        {
            if (p->data > q->data)
            {
                p->next = q->next;
                q->next = p;
                head->next = q;

                Node *temp = (Node *)malloc(sizeof(Node));
                temp = q;
                q = p;
                p = temp;

                head->next = p;
            }
            //指针向前一步
            p = p->next;
            q = q->next;
            head = head->next;
        }
    }
}
void bubleSortList_withoutLength(List *L) //交换节点的冒泡排序
{
    Node *p = (Node *)malloc(sizeof(Node));
    Node *head = (Node *)malloc(sizeof(Node));
    head = L;
    Node *tail = (Node *)malloc(sizeof(Node));
    Node *q = (Node *)malloc(sizeof(Node));
    for (tail = NULL; head->next != tail; tail = p)
    {
        p = head; //每次循环从头开始(p代表指向第一个结点)
        q = p->next;
        for (; p->next != tail;)
        {
            if (p->data > q->next->data)
            {
                p->next = q->next;
                q->next = q->next->next;
                p->next->next = q;
            }
            else
                q = q->next;
        }
    }
}
//http://www.manongjc.com/detail/16-xstwdhedgqxhlwp.html
